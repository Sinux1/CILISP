( (let (double x 1) ) x )
(add ((let (double abc 1)) (sub 3 abc)) 4)
(mult ((let (a 1) (int b 2.5)) (add a b)) (sqrt 2))
(add ((let (int a ((let (b 2)) (mult b (sqrt 10))))) (div a 2)) ((let (c 5)) (sqrt c)))
((let (first (sub 5 1)) (second 2)) (add (pow 2 first) (sqrt second)))
((let (double abc 1)) (sub ((let (abc 2) (de 3)) (add abc de)) abc))
((let (x 3) (x 30)) (add ((let (x 10) (double x 100)) x) x))
((let (int abc 1)) (sub ((let (double abc 2)) (add abc de)) abc))
((let (double x 1)) y)
(1)
((let (x 1)     (x 3) (x 5) (double y 10)) (add x ((let (x 10)) (add x (neg y)))))
((let (x 1)     (double x 3)  (y 10) (x 5)) (add x ((let (x 10)) (add x (neg y)))))
QUIT
quit

(add ((let (double x 1)) x) ((let (y 10)) x))

